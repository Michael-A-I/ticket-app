{"version":3,"file":"static/js/870.5979b585.chunk.js","mappings":"gSAwGA,MA9FA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MAEjB,GAA8BC,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwBF,EAAAA,EAAAA,WAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,cAAzC,eAAOK,EAAP,KALkB,8CAOlB,WAA8BC,GAA9B,yFACEA,EAAEC,iBACFC,QAAQC,IAAI,YACNC,EAAOJ,EAAEK,OAETC,EAAO,CAAEC,SAAUH,EAAK,GAAGI,MAAOC,MAAOL,EAAK,GAAGI,MAAOE,SAAUN,EAAK,GAAGI,OAChFN,QAAQC,IAAI,qCAAuCG,EAAKC,UAN1D,kBASsBI,MAAM,YAAa,CACnCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUV,KAd3B,cASUW,EATV,iBAiB4BA,EAAIC,OAjBhC,QAiBUC,EAjBV,OAkBIjB,QAAQC,IAAIgB,EAAUxB,SAEI,YAAtBwB,EAAUxB,SACZG,GAAQ,GAGVF,EAAWuB,EAAUxB,SAxBzB,6GAPkB,sBAuClB,OAlCA,MAmCE,iCACE,SAACyB,EAAA,EAAD,KAEA,UAACC,EAAA,EAAD,CAAMC,MAAM,WAAZ,UACe,YAAZ3B,EACCH,EAAS,WAET,gBAAK+B,UAAU,uBAAf,UACE,UAACC,EAAA,EAAD,CAAO3B,KAAMA,EAAM4B,QAbV,WACjB3B,GAASD,IAYuC6B,GAAG,SAAS3B,SAAUA,EAAU4B,MAAO,CAAE5B,SAAU,WAAY6B,OAAQ,OAASC,MAAO,IAAMC,UAAQ,EAA7I,WACE,UAACN,EAAA,SAAD,YACE,gBAAKO,IAAI,2BAA2BR,UAAU,eAAeS,IAAI,MACjE,mBAAQT,UAAU,UAAlB,uBAGF,SAACC,EAAA,OAAD,UAAa7B,UAInB,gBAAK4B,UAAU,cAAf,UACE,SAACU,EAAA,EAAD,CAAMN,MAAO,CAAEO,MAAO,QAASC,gBAAiB,WAAhD,UACE,UAACF,EAAA,OAAD,YACE,SAACA,EAAA,QAAD,CAAYV,UAAU,oBAAtB,gCAEA,UAACa,EAAA,EAAD,CAAMb,UAAU,oBAAoBc,SAAU,SAAArC,GAAC,OA/DzC,2CA+D6CsC,CAAetC,IAAlE,WACE,UAACoC,EAAA,QAAD,CAAYb,UAAU,OAAOgB,UAAU,iBAAvC,WACE,SAACH,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CAAcI,KAAK,WAAWC,YAAY,oBAE5C,UAACL,EAAA,QAAD,CAAYb,UAAU,OAAOgB,UAAU,iBAAvC,WACE,SAACH,EAAA,QAAD,6BACA,SAACA,EAAA,UAAD,CAAcI,KAAK,QAAQC,YAAY,oBAEzC,UAACL,EAAA,QAAD,CAAYb,UAAU,OAAOgB,UAAU,oBAAvC,WACE,SAACH,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CAAcI,KAAK,WAAWC,YAAY,iBAE5C,SAACC,EAAA,EAAD,CAAQF,KAAK,SAAb,qBAEA,eAAGjB,UAAU,cAAb,oCAC0B,KACxB,SAAC,KAAD,CAAMA,UAAU,aAAaoB,GAAG,SAAhC,wC","sources":["components/Register.js"],"sourcesContent":["import { Link, useNavigate } from \"react-router-dom\"\nimport { useEffect } from \"react\"\nimport { useState } from \"react\"\nimport Navbar from \"./Navbar\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./css/Register.css\"\nimport Page from \"./Page\"\nimport { Button, Card, Form, Toast } from \"react-bootstrap\"\n// import FlashMessage from \"./react-flash-message\"\n\nfunction Register() {\n  const navigate = useNavigate()\n\n  const [message, setMessage] = useState()\n  const [show, setShow] = useState(false)\n  const [position, setPosition] = useState(\"top-center\")\n\n  async function handleRegister(e) {\n    e.preventDefault()\n    console.log(\"Register\")\n    const form = e.target\n    // console.log(form[0].value, form[1].value, form[2].value)\n    const user = { username: form[0].value, email: form[1].value, password: form[2].value }\n    console.log(\"Register User Post Data username: \" + user.username)\n\n    try {\n      const res = await fetch(\"/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      })\n\n      const serverRes = await res.json()\n      console.log(serverRes.message)\n      /* if on submit server response is an Error then show error message */\n      if (serverRes.message !== \"Success\") {\n        setShow(true)\n      }\n\n      setMessage(serverRes.message)\n    } catch (error) {}\n  }\n\n  const toggleShow = () => {\n    setShow(!show)\n  }\n\n  return (\n    <>\n      <Navbar />\n\n      <Page title=\"Register\">\n        {message === \"Success\" ? (\n          navigate(\"/login\")\n        ) : (\n          <div className=\"toast-display-center\">\n            <Toast show={show} onClose={toggleShow} bg=\"danger\" position={position} style={{ position: \"absolute\", zIndex: \"999\" }} delay={3000} autohide>\n              <Toast.Header>\n                <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" />\n                <strong className=\"me-auto\">Error</strong>\n                {/* <small>11 mins ago</small> */}\n              </Toast.Header>\n              <Toast.Body>{message}</Toast.Body>\n            </Toast>\n          </div>\n        )}\n        <div className=\"center-page\">\n          <Card style={{ width: \"35rem\", backgroundColor: \"#36393f\" }}>\n            <Card.Body>\n              <Card.Title className=\"card-center-title\">Create an Account</Card.Title>\n\n              <Form className=\"form-group-styles\" onSubmit={e => handleRegister(e)}>\n                <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control type=\"username\" placeholder=\"Enter email\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n                <Button type=\"submit\">Sumbit</Button>\n\n                <p className=\"form-footer\">\n                  Already have an account{\" \"}\n                  <Link className=\"link-style\" to=\"/login\">\n                    Login\n                  </Link>\n                </p>\n              </Form>\n            </Card.Body>\n          </Card>\n        </div>\n      </Page>\n      {/* initial state show nothing */}\n    </>\n  )\n}\n\nexport default Register\n"],"names":["navigate","useNavigate","useState","message","setMessage","show","setShow","position","e","preventDefault","console","log","form","target","user","username","value","email","password","fetch","method","headers","body","JSON","stringify","res","json","serverRes","Navbar","Page","title","className","Toast","onClose","bg","style","zIndex","delay","autohide","src","alt","Card","width","backgroundColor","Form","onSubmit","handleRegister","controlId","type","placeholder","Button","to"],"sourceRoot":""}