{"version":3,"file":"static/js/686.f81f3c8a.chunk.js","mappings":"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","sources":["components/ui/ProfileEditNav.js","components/ProfileEdit.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { Row } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\"\n\nimport \"./css/ProfileEditNav.css\"\n\nfunction ProfileEditNav() {\n  const [clickValue, setClickValue] = useState()\n  const handleClick = value => {\n    setClickValue(value)\n    console.log(value)\n  }\n\n  return (\n    <>\n      <Row className=\"profile-edit-nav\">\n        {clickValue === \"Profile\" ? (\n          <Link to={\"/profile/edit\"} onClick={() => handleClick(\"Profile\")} style={{ color: \"yellow\" }} className=\"profile-edit-button\">\n            Profile\n          </Link>\n        ) : (\n          <Link to={\"/profile/edit\"} onClick={() => handleClick(\"Profile\")} value=\"Profile\" className=\"profile-edit-button\">\n            Profile\n          </Link>\n        )}\n\n        {clickValue === \"Avatar\" ? (\n          <Link to={\"/avatar/edit\"} onClick={() => handleClick(\"Avatar\")} style={{ color: \"yellow\" }} className=\"profile-edit-button\">\n            Avatar\n          </Link>\n        ) : (\n          <Link to={\"/avatar/edit\"} onClick={() => handleClick(\"Avatar\")} value=\"Avatar\" className=\"profile-edit-button\">\n            Avatar\n          </Link>\n        )}\n      </Row>\n    </>\n  )\n}\n\nexport default ProfileEditNav\n","import { Link, useNavigate } from \"react-router-dom\"\nimport { useContext, useEffect } from \"react\"\nimport { useState } from \"react\"\nimport Navbar from \"./Navbar\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./css/ProfileEdit.css\"\nimport Page from \"./Page\"\nimport { Button, Card, Container, FloatingLabel, Form, Row, Toast } from \"react-bootstrap\"\nimport StateContext from \"../context/StateContext\"\nimport ProfileEditNav from \"./ui/ProfileEditNav\"\nimport \"./ui/css/ProfileEditNav.css\"\n\nfunction ProfileEdit() {\n  const navigate = useNavigate()\n  const appState = useContext(StateContext)\n  const [message, setMessage] = useState()\n  const [show, setShow] = useState(false)\n  const [password, setPassword] = useState(\"\")\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\")\n  const [user, setUser] = useState({})\n  const [userState, setUserState] = useState({ title: user.title, bio: user.bio })\n\n  const [position, setPosition] = useState(\"top-center\")\n  const token = appState.user.token\n\n  /* Load User Info */\n\n  useEffect(() => {\n    userInfo()\n  }, [])\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n    console.log(\"Register\")\n    const form = e.target\n    // console.log(form[0].value, form[1].value, form[2].value)\n    const user = { title: form[2].value, bio: form[3].value }\n    console.log(\"Register User Post Data username: \" + user.username)\n\n    try {\n      const res = await fetch(\"/profile/edit\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token\n        },\n        body: JSON.stringify(user)\n      })\n\n      const serverRes = await res.json()\n      console.log(serverRes.message)\n      /* if on submit server response is an Error then show error message */\n      if (serverRes.message !== \"Success\") {\n        setShow(true)\n      }\n\n      setMessage(serverRes.message)\n    } catch (error) {}\n  }\n\n  const userInfo = async () => {\n    try {\n      const res = await fetch(\"/user\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token\n        }\n      })\n\n      const user = await res.json()\n\n      setUserState({ title: user.title, bio: user.bio })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleChangeTITLE = e => {\n    const value = e.target.value\n\n    setUserState(prev => ({ ...prev, title: value }))\n  }\n\n  const handleChangeBIO = e => {\n    const value = e.target.value\n\n    setUserState(prev => ({ ...prev, bio: value }))\n  }\n\n  async function handlePassword(e) {\n    e.preventDefault()\n    if (passwordsMatch()) {\n      console.log(\"passwords match on submit\")\n\n      const user = e.target\n      const userPassword = { password: user[0].value }\n\n      const res = await fetch(\"/profile/edit/password\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token\n        },\n        body: JSON.stringify(userPassword)\n      })\n\n      const response = await res.json()\n\n      console.log(response)\n    } else {\n      console.log(\"passwords do not match on submit\")\n    }\n  }\n\n  const toggleShow = () => {\n    setShow(!show)\n  }\n\n  const passwordsMatch = () => {\n    if (password == passwordConfirm) {\n      console.log(\"passwords match\")\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <>\n      <Navbar />\n      <Container id=\"bootstrap-overrides\">\n        <Page title=\"Register\">\n          <ProfileEditNav></ProfileEditNav>\n          {/* Profile Edit Form */}\n          <Row>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                {<Form.Control type=\"email\" placeholder={appState.user.email} value={appState.user.email} disabled />}\n\n                <Form.Text className=\"text-muted\">can not change email</Form.Text>\n              </Form.Group>\n\n              {\n                <Form.Group className=\"mb-3\">\n                  <FloatingLabel controlId=\"\" label={\"Name: \" + appState.user.username}>\n                    <Form.Control disabled type=\"input\" placeholder={appState.user.username} value={appState.user.username} />\n                  </FloatingLabel>\n                </Form.Group>\n              }\n              {console.log(user)}\n              <Form.Group className=\"mb-3\">\n                <FloatingLabel controlId=\"floatingPassword\" label=\"Job Title\">\n                  <Form.Control type=\"input\" value={userState.title} onChange={e => handleChangeTITLE(e)} placeholder=\"Job Title\" />\n                </FloatingLabel>\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\">\n                <FloatingLabel controlId=\"floatingPassword\" label=\"Biography\">\n                  <Form.Control as=\"textarea\" value={userState.bio} onChange={e => handleChangeBIO(e)} placeholder=\"Biography\" />\n                </FloatingLabel>\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\">\n                Save Changes\n              </Button>\n            </Form>\n          </Row>\n          <Row>\n            <Form onSubmit={handlePassword}>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <FloatingLabel controlId=\"floatingPassword\" label=\"Password\">\n                  <Form.Control required type=\"password\" onChange={e => setPassword(e.target.value)} placeholder=\"Password\" />\n                </FloatingLabel>\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <FloatingLabel controlId=\"floatingPassword\" label=\"Confirm Password\">\n                  <Form.Control required type=\"password\" onChange={e => setPasswordConfirm(e.target.value)} placeholder=\"Password\" />\n                </FloatingLabel>\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\">\n                Change Password{\" \"}\n              </Button>\n            </Form>\n          </Row>\n        </Page>\n      </Container>\n      {/* initial state show nothing */}\n    </>\n  )\n}\n\nexport default ProfileEdit\n"],"names":["useState","clickValue","setClickValue","handleClick","value","console","log","Row","className","to","onClick","style","color","useNavigate","appState","useContext","StateContext","setMessage","setShow","password","setPassword","passwordConfirm","setPasswordConfirm","user","title","bio","userState","setUserState","token","e","preventDefault","form","target","username","fetch","method","headers","body","JSON","stringify","res","json","serverRes","message","useEffect","userInfo","passwordsMatch","userPassword","response","Navbar","Container","id","Page","Form","onSubmit","controlId","type","placeholder","email","disabled","FloatingLabel","label","onChange","prev","handleChangeTITLE","as","handleChangeBIO","Button","variant","required"],"sourceRoot":""}